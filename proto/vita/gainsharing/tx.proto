syntax = "proto3";

package vita.gainsharing;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "vita/gainsharing/params.proto";
import "vita/gainsharing/mechanism.proto";
import "vita/gainsharing/performance.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "vita/x/gainsharing/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams         (MsgUpdateParams        ) returns (MsgUpdateParamsResponse        );
  rpc CreateMechanism      (MsgCreateMechanism     ) returns (MsgCreateMechanismResponse     );
  rpc UpdateMechanism      (MsgUpdateMechanism     ) returns (MsgUpdateMechanismResponse     );
  rpc DeleteMechanism      (MsgDeleteMechanism     ) returns (MsgDeleteMechanismResponse     );
  rpc CreatePerformance    (MsgCreatePerformance   ) returns (MsgCreatePerformanceResponse   );
  rpc UpdatePerformance    (MsgUpdatePerformance   ) returns (MsgUpdatePerformanceResponse   );
  rpc DeletePerformance    (MsgDeletePerformance   ) returns (MsgDeletePerformanceResponse   );
  rpc CalculatePerformance (MsgCalculatePerformance) returns (MsgCalculatePerformanceResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                          "authority";
  option           (amino.name) = "vita/x/gainsharing/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateMechanism {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       = 1;
  string metrics       = 2;
  string coefficients  = 3;
  string convergeLimit = 4;
  string slope         = 5;
}

message MsgCreateMechanismResponse {
  uint64 id = 1;
}

message MsgUpdateMechanism {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       = 1;
  uint64 id            = 2;
  string metrics       = 3;
  string coefficients  = 4;
  string convergeLimit = 5;
  string slope         = 6;
}

message MsgUpdateMechanismResponse {}

message MsgDeleteMechanism {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeleteMechanismResponse {}

message MsgCreatePerformance {
  option (cosmos.msg.v1.signer) = "creator";
  string                   creator = 1;
  uint64                   mid     = 2;
  string                   tid     = 3;
  cosmos.base.v1beta1.Coin wager   = 4 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin reward  = 5 [(gogoproto.nullable) = false];
  string                   earner  = 6;
}

message MsgCreatePerformanceResponse {
  uint64 id = 1;
}

message MsgUpdatePerformance {
  option (cosmos.msg.v1.signer) = "creator";
  string                   creator = 1;
  uint64                   id      = 2;
  uint64                   mid     = 3;
  string                   tid     = 4;
  cosmos.base.v1beta1.Coin wager   = 5 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin reward  = 6 [(gogoproto.nullable) = false];
  string                   earner  = 7;
}

message MsgUpdatePerformanceResponse {}

message MsgDeletePerformance {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeletePerformanceResponse {}

message MsgCalculatePerformance {
  option (cosmos.msg.v1.signer) = "creator";
  string                   creator = 1;
  uint64                    mid     = 2;
  cosmos.base.v1beta1.Coin wager   = 3 [(gogoproto.nullable) = false];
  string                   earner  = 4;
  uint64                   taskid  = 5;
}

message MsgCalculatePerformanceResponse {
  int32                    id     = 1;
  cosmos.base.v1beta1.Coin reward = 2 [(gogoproto.nullable) = false];
}

