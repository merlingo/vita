syntax = "proto3";

package vita.labour;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "vita/labour/params.proto";
import "vita/labour/task.proto";
import "vita/labour/activity.proto";

option go_package = "vita/x/labour/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams   (MsgUpdateParams  ) returns (MsgUpdateParamsResponse  );
  rpc CreateTask     (MsgCreateTask    ) returns (MsgCreateTaskResponse    );
  rpc UpdateTask     (MsgUpdateTask    ) returns (MsgUpdateTaskResponse    );
  rpc DeleteTask     (MsgDeleteTask    ) returns (MsgDeleteTaskResponse    );
  rpc CreateActivity (MsgCreateActivity) returns (MsgCreateActivityResponse);
  rpc UpdateActivity (MsgUpdateActivity) returns (MsgUpdateActivityResponse);
  rpc DeleteActivity (MsgDeleteActivity) returns (MsgDeleteActivityResponse);
  rpc BeginTask      (MsgBeginTask     ) returns (MsgBeginTaskResponse     );
  rpc Work           (MsgWork          ) returns (MsgWorkResponse          );
  rpc FinishTask     (MsgFinishTask    ) returns (MsgFinishTaskResponse    );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                     "authority";
  option           (amino.name) = "vita/x/labour/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator    = 1;
  uint64 taskId     = 2;
  string assigner   = 3;
  int32  state      = 4;
  uint64 beginTask  = 5;
  uint64 deadline   = 6;
  uint64 finishTask = 7;
  string wager      = 8;
}

message MsgCreateTaskResponse {
  uint64 id = 1;
}

message MsgUpdateTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator    = 1;
  uint64 id         = 2;
  uint64 taskId     = 3;
  string assigner   = 4;
  int32  state      = 5;
  uint64 beginTask  = 6;
  uint64 deadline   = 7;
  uint64 finishTask = 8;
  string wager      = 9;
}

message MsgUpdateTaskResponse {}

message MsgDeleteTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeleteTaskResponse {}

message MsgCreateActivity {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string worker      = 2;
  uint64 beginWork   = 3;
  uint64 finishWork  = 4;
  int32  workingTime = 5;
  uint64 taskId      = 6;
}

message MsgCreateActivityResponse {
  uint64 id = 1;
}

message MsgUpdateActivity {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  uint64 id          = 2;
  string worker      = 3;
  uint64 beginWork   = 4;
  uint64 finishWork  = 5;
  int32  workingTime = 6;
  uint64 taskId      = 7;
}

message MsgUpdateActivityResponse {}

message MsgDeleteActivity {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeleteActivityResponse {}

message MsgBeginTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  uint64 taskid    = 2;
  string assigner  = 3;
  uint64 beginTask = 4;
  uint64 deadline  = 5;
  string wager     = 6;
}

message MsgBeginTaskResponse {
  uint64 id = 1;
}

message MsgWork {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string worker      = 2;
  uint64 taskid      = 3;
  uint64 beginWork   = 4;
  uint64 finishWork  = 5;
  int32  workingTime = 6;
}

message MsgWorkResponse {
  uint64 id = 1;
}

message MsgFinishTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator    = 1;
  uint64 taskid     = 2;
  uint64 finishTask = 3;
}

message MsgFinishTaskResponse {}

